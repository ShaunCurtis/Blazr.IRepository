@page "/fetchdata"
@inject NavigationManager NavManager
@inject WeatherForecastListService ForecastService

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (this.ForecastService.Forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Uid</th>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var forecast in this.ForecastService.Forecasts)
            {
                <tr>
                    <td>@forecast.Uid</td>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.Summary</td>
                    <td><button class="btn btn-sm btn-danger" @onclick="() => EditRecord(forecast.Uid)">Edit</button></td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    protected override async Task OnInitializedAsync()
        => await ForecastService.GetForecastsAsync(new ListQueryRequest());

    private void EditRecord(Guid id)
        => this.NavManager.NavigateTo($"/edit/{id}");
}
